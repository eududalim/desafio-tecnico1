// Mocks generated by Mockito 5.3.2 from annotations
// in seventh_flutter_app/test/app/layers/data/repositories/home_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:seventh_flutter_app/app/layers/data/datasources/seventh_api/seventh_api_datasource.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SeventhApiDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockSeventhApiDatasource extends _i1.Mock
    implements _i2.SeventhApiDatasource {
  @override
  set token(String? _token) => super.noSuchMethod(
        Invocation.setter(
          #token,
          _token,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set urlVideo(String? _urlVideo) => super.noSuchMethod(
        Invocation.setter(
          #urlVideo,
          _urlVideo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool getAuthState() => (super.noSuchMethod(
        Invocation.method(
          #getAuthState,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i3.Future<String> loginWithUsernameAndPassword({
    required String? username,
    required String? password,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginWithUsernameAndPassword,
          [],
          {
            #username: username,
            #password: password,
          },
        ),
        returnValue: _i3.Future<String>.value(''),
        returnValueForMissingStub: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
  @override
  _i3.Future<String> getUrlVideo(String? fileName) => (super.noSuchMethod(
        Invocation.method(
          #getUrlVideo,
          [fileName],
        ),
        returnValue: _i3.Future<String>.value(''),
        returnValueForMissingStub: _i3.Future<String>.value(''),
      ) as _i3.Future<String>);
}
